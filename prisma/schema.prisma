// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  username     String         @unique
  password     String
  email        String         @unique
  fullname     String
  phoneNumber  String
  dateOfBirth  DateTime
  avatarUrl    String
  createdBy    Int
  title        String
  createdAt    DateTime       @default(now())
  upDatedAt    DateTime       @updatedAt
  UserFunction UserFunction[]
}

model UserType {
  id               Int                @id @default(autoincrement())
  userTypeName     String
  description      String
  createdBy        Int
  createdAt        DateTime           @default(now())
  upDatedAt        DateTime           @updatedAt
  UserTypeFunction UserTypeFunction[]
}

model Function {
  id               Int                @id @default(autoincrement())
  functionName     String
  isDisplay        Boolean            @default(true)
  isActive         Boolean            @default(true)
  parentID         Int
  createdBy        Int
  createdAt        DateTime           @default(now())
  upDatedAt        DateTime           @updatedAt
  UserFunction     UserFunction[]
  UserTypeFunction UserTypeFunction[]
}

model UserFunction {
  userID     Int
  functionID Int
  isGrant    Boolean
  isInsert   Boolean
  isUpdate   Boolean
  isDelete   Boolean
  createdBy  Int
  createdAt  DateTime @default(now())
  upDatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userID], references: [id])
  function   Function @relation(fields: [functionID], references: [id])

  @@id([userID, functionID])
}

model UserTypeFunction {
  userTypeID Int
  functionID Int
  isGrant    Boolean
  isInsert   Boolean
  isUpdate   Boolean
  isDelete   Boolean
  createdBy  Int
  createdAt  DateTime @default(now())
  upDatedAt  DateTime @updatedAt
  userType   UserType @relation(fields: [userTypeID], references: [id])
  function   Function @relation(fields: [functionID], references: [id])

  @@id([userTypeID, functionID])
}
